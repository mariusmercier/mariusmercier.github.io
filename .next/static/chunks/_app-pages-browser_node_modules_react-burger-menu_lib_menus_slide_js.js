"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_react-burger-menu_lib_menus_slide_js"],{

/***/ "(app-pages-browser)/./node_modules/react-burger-menu/lib/components/BurgerIcon.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react-burger-menu/lib/components/BurgerIcon.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n  _function: while (_again) {\n    var object = _x,\n      property = _x2,\n      receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n      if (getter === undefined) {\n        return undefined;\n      }\n      return getter.call(receiver);\n    }\n  }\n};\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = __webpack_require__(/*! prop-types */ \"(app-pages-browser)/./node_modules/prop-types/index.js\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar BurgerIcon = function (_Component) {\n  _inherits(BurgerIcon, _Component);\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return _extends({\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      }, this.state.hover && this.props.styles.bmBurgerBarsHover);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        zIndex: 1,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-icon ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({\n            width: '100%',\n            height: '100%'\n          }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement('span', null, [0, 1, 2].map(function (bar) {\n          return _react2['default'].createElement('span', {\n            key: bar,\n            className: ('bm-burger-bars ' + _this.props.barClassName + ' ' + (_this.state.hover ? 'bm-burger-bars-hover' : '')).trim(),\n            style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n          });\n        }));\n      }\n      return _react2['default'].createElement('div', {\n        className: ('bm-burger-button ' + this.props.className).trim(),\n        style: _extends({\n          zIndex: 1000\n        }, this.props.styles.bmBurgerButton)\n      }, _react2['default'].createElement('button', {\n        type: 'button',\n        id: 'react-burger-menu-btn',\n        onClick: this.props.onClick,\n        onMouseOver: function () {\n          _this.setState({\n            hover: true\n          });\n          if (_this.props.onIconHoverChange) {\n            _this.props.onIconHoverChange({\n              isMouseIn: true\n            });\n          }\n        },\n        onMouseOut: function () {\n          _this.setState({\n            hover: false\n          });\n          if (_this.props.onIconHoverChange) {\n            _this.props.onIconHoverChange({\n              isMouseIn: false\n            });\n          }\n        },\n        style: buttonStyle\n      }, 'Open Menu'), icon);\n    }\n  }]);\n  return BurgerIcon;\n}(_react.Component);\nexports[\"default\"] = BurgerIcon;\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-burger-menu/lib/components/BurgerIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-burger-menu/lib/components/CrossIcon.js":
/*!********************************************************************!*\
  !*** ./node_modules/react-burger-menu/lib/components/CrossIcon.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if ('value' in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _get = function get(_x, _x2, _x3) {\n  var _again = true;\n  _function: while (_again) {\n    var object = _x,\n      property = _x2,\n      receiver = _x3;\n    _again = false;\n    if (object === null) object = Function.prototype;\n    var desc = Object.getOwnPropertyDescriptor(object, property);\n    if (desc === undefined) {\n      var parent = Object.getPrototypeOf(object);\n      if (parent === null) {\n        return undefined;\n      } else {\n        _x = parent;\n        _x2 = property;\n        _x3 = receiver;\n        _again = true;\n        desc = parent = undefined;\n        continue _function;\n      }\n    } else if ('value' in desc) {\n      return desc.value;\n    } else {\n      var getter = desc.get;\n      if (getter === undefined) {\n        return undefined;\n      }\n      return getter.call(receiver);\n    }\n  }\n};\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError('Cannot call a class as a function');\n  }\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = __webpack_require__(/*! prop-types */ \"(app-pages-browser)/./node_modules/prop-types/index.js\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar CrossIcon = function (_Component) {\n  _inherits(CrossIcon, _Component);\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        zIndex: 1,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        fontSize: 0,\n        background: 'transparent',\n        cursor: 'pointer'\n      };\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: ('bm-cross ' + (this.props.customIcon.props.className || '')).trim(),\n          style: _extends({\n            width: '100%',\n            height: '100%'\n          }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement('span', {\n          style: {\n            position: 'absolute',\n            top: '6px',\n            right: '14px'\n          }\n        }, ['before', 'after'].map(function (type, i) {\n          return _react2['default'].createElement('span', {\n            key: i,\n            className: ('bm-cross ' + _this.props.crossClassName).trim(),\n            style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n          });\n        }));\n      }\n      return _react2['default'].createElement('div', {\n        className: ('bm-cross-button ' + this.props.className).trim(),\n        style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n      }, _react2['default'].createElement('button', _extends({\n        type: 'button',\n        id: 'react-burger-cross-btn',\n        onClick: this.props.onClick,\n        style: buttonStyle\n      }, !this.props.isOpen && {\n        tabIndex: -1\n      }), 'Close Menu'), icon);\n    }\n  }]);\n  return CrossIcon;\n}(_react.Component);\nexports[\"default\"] = CrossIcon;\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  isOpen: _propTypes2['default'].bool,\n  styles: _propTypes2['default'].object\n};\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {},\n  isOpen: false\n};\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1idXJnZXItbWVudS9saWIvY29tcG9uZW50cy9Dcm9zc0ljb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBRUYsSUFBSUMsUUFBUSxHQUFHSixNQUFNLENBQUNLLE1BQU0sSUFBSSxVQUFVQyxNQUFNLEVBQUU7RUFBRSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0MsU0FBUyxDQUFDQyxNQUFNLEVBQUVGLENBQUMsRUFBRSxFQUFFO0lBQUUsSUFBSUcsTUFBTSxHQUFHRixTQUFTLENBQUNELENBQUMsQ0FBQztJQUFFLEtBQUssSUFBSUksR0FBRyxJQUFJRCxNQUFNLEVBQUU7TUFBRSxJQUFJVixNQUFNLENBQUNZLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNKLE1BQU0sRUFBRUMsR0FBRyxDQUFDLEVBQUU7UUFBRUwsTUFBTSxDQUFDSyxHQUFHLENBQUMsR0FBR0QsTUFBTSxDQUFDQyxHQUFHLENBQUM7TUFBRTtJQUFFO0VBQUU7RUFBRSxPQUFPTCxNQUFNO0FBQUUsQ0FBQztBQUVoUSxJQUFJUyxZQUFZLEdBQUksWUFBWTtFQUFFLFNBQVNDLGdCQUFnQkEsQ0FBQ1YsTUFBTSxFQUFFVyxLQUFLLEVBQUU7SUFBRSxLQUFLLElBQUlWLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR1UsS0FBSyxDQUFDUixNQUFNLEVBQUVGLENBQUMsRUFBRSxFQUFFO01BQUUsSUFBSVcsVUFBVSxHQUFHRCxLQUFLLENBQUNWLENBQUMsQ0FBQztNQUFFVyxVQUFVLENBQUNDLFVBQVUsR0FBR0QsVUFBVSxDQUFDQyxVQUFVLElBQUksS0FBSztNQUFFRCxVQUFVLENBQUNFLFlBQVksR0FBRyxJQUFJO01BQUUsSUFBSSxPQUFPLElBQUlGLFVBQVUsRUFBRUEsVUFBVSxDQUFDRyxRQUFRLEdBQUcsSUFBSTtNQUFFckIsTUFBTSxDQUFDQyxjQUFjLENBQUNLLE1BQU0sRUFBRVksVUFBVSxDQUFDUCxHQUFHLEVBQUVPLFVBQVUsQ0FBQztJQUFFO0VBQUU7RUFBRSxPQUFPLFVBQVVJLFdBQVcsRUFBRUMsVUFBVSxFQUFFQyxXQUFXLEVBQUU7SUFBRSxJQUFJRCxVQUFVLEVBQUVQLGdCQUFnQixDQUFDTSxXQUFXLENBQUNWLFNBQVMsRUFBRVcsVUFBVSxDQUFDO0lBQUUsSUFBSUMsV0FBVyxFQUFFUixnQkFBZ0IsQ0FBQ00sV0FBVyxFQUFFRSxXQUFXLENBQUM7SUFBRSxPQUFPRixXQUFXO0VBQUUsQ0FBQztBQUFFLENBQUMsQ0FBRSxDQUFDO0FBRXJqQixJQUFJRyxJQUFJLEdBQUcsU0FBU0MsR0FBR0EsQ0FBQ0MsRUFBRSxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRTtFQUFFLElBQUlDLE1BQU0sR0FBRyxJQUFJO0VBQUVDLFNBQVMsRUFBRSxPQUFPRCxNQUFNLEVBQUU7SUFBRSxJQUFJRSxNQUFNLEdBQUdMLEVBQUU7TUFBRU0sUUFBUSxHQUFHTCxHQUFHO01BQUVNLFFBQVEsR0FBR0wsR0FBRztJQUFFQyxNQUFNLEdBQUcsS0FBSztJQUFFLElBQUlFLE1BQU0sS0FBSyxJQUFJLEVBQUVBLE1BQU0sR0FBR0csUUFBUSxDQUFDdkIsU0FBUztJQUFFLElBQUl3QixJQUFJLEdBQUdwQyxNQUFNLENBQUNxQyx3QkFBd0IsQ0FBQ0wsTUFBTSxFQUFFQyxRQUFRLENBQUM7SUFBRSxJQUFJRyxJQUFJLEtBQUtFLFNBQVMsRUFBRTtNQUFFLElBQUlDLE1BQU0sR0FBR3ZDLE1BQU0sQ0FBQ3dDLGNBQWMsQ0FBQ1IsTUFBTSxDQUFDO01BQUUsSUFBSU8sTUFBTSxLQUFLLElBQUksRUFBRTtRQUFFLE9BQU9ELFNBQVM7TUFBRSxDQUFDLE1BQU07UUFBRVgsRUFBRSxHQUFHWSxNQUFNO1FBQUVYLEdBQUcsR0FBR0ssUUFBUTtRQUFFSixHQUFHLEdBQUdLLFFBQVE7UUFBRUosTUFBTSxHQUFHLElBQUk7UUFBRU0sSUFBSSxHQUFHRyxNQUFNLEdBQUdELFNBQVM7UUFBRSxTQUFTUCxTQUFTO01BQUU7SUFBRSxDQUFDLE1BQU0sSUFBSSxPQUFPLElBQUlLLElBQUksRUFBRTtNQUFFLE9BQU9BLElBQUksQ0FBQ2pDLEtBQUs7SUFBRSxDQUFDLE1BQU07TUFBRSxJQUFJc0MsTUFBTSxHQUFHTCxJQUFJLENBQUNWLEdBQUc7TUFBRSxJQUFJZSxNQUFNLEtBQUtILFNBQVMsRUFBRTtRQUFFLE9BQU9BLFNBQVM7TUFBRTtNQUFFLE9BQU9HLE1BQU0sQ0FBQzNCLElBQUksQ0FBQ29CLFFBQVEsQ0FBQztJQUFFO0VBQUU7QUFBRSxDQUFDO0FBRWpwQixTQUFTUSxzQkFBc0JBLENBQUNDLEdBQUcsRUFBRTtFQUFFLE9BQU9BLEdBQUcsSUFBSUEsR0FBRyxDQUFDQyxVQUFVLEdBQUdELEdBQUcsR0FBRztJQUFFLFNBQVMsRUFBRUE7RUFBSSxDQUFDO0FBQUU7QUFFaEcsU0FBU0UsZUFBZUEsQ0FBQ0MsUUFBUSxFQUFFeEIsV0FBVyxFQUFFO0VBQUUsSUFBSSxFQUFFd0IsUUFBUSxZQUFZeEIsV0FBVyxDQUFDLEVBQUU7SUFBRSxNQUFNLElBQUl5QixTQUFTLENBQUMsbUNBQW1DLENBQUM7RUFBRTtBQUFFO0FBRXhKLFNBQVNDLFNBQVNBLENBQUNDLFFBQVEsRUFBRUMsVUFBVSxFQUFFO0VBQUUsSUFBSSxPQUFPQSxVQUFVLEtBQUssVUFBVSxJQUFJQSxVQUFVLEtBQUssSUFBSSxFQUFFO0lBQUUsTUFBTSxJQUFJSCxTQUFTLENBQUMsMERBQTBELEdBQUcsT0FBT0csVUFBVSxDQUFDO0VBQUU7RUFBRUQsUUFBUSxDQUFDckMsU0FBUyxHQUFHWixNQUFNLENBQUNtRCxNQUFNLENBQUNELFVBQVUsSUFBSUEsVUFBVSxDQUFDdEMsU0FBUyxFQUFFO0lBQUV3QyxXQUFXLEVBQUU7TUFBRWpELEtBQUssRUFBRThDLFFBQVE7TUFBRTlCLFVBQVUsRUFBRSxLQUFLO01BQUVFLFFBQVEsRUFBRSxJQUFJO01BQUVELFlBQVksRUFBRTtJQUFLO0VBQUUsQ0FBQyxDQUFDO0VBQUUsSUFBSThCLFVBQVUsRUFBRWxELE1BQU0sQ0FBQ3FELGNBQWMsR0FBR3JELE1BQU0sQ0FBQ3FELGNBQWMsQ0FBQ0osUUFBUSxFQUFFQyxVQUFVLENBQUMsR0FBR0QsUUFBUSxDQUFDSyxTQUFTLEdBQUdKLFVBQVU7QUFBRTtBQUU3ZSxJQUFJSyxNQUFNLEdBQUdDLG1CQUFPLENBQUMsbUZBQU8sQ0FBQztBQUU3QixJQUFJQyxPQUFPLEdBQUdmLHNCQUFzQixDQUFDYSxNQUFNLENBQUM7QUFFNUMsSUFBSUcsVUFBVSxHQUFHRixtQkFBTyxDQUFDLDBFQUFZLENBQUM7QUFFdEMsSUFBSUcsV0FBVyxHQUFHakIsc0JBQXNCLENBQUNnQixVQUFVLENBQUM7QUFFcEQsSUFBSUUsU0FBUyxHQUFJLFVBQVVDLFVBQVUsRUFBRTtFQUNyQ2IsU0FBUyxDQUFDWSxTQUFTLEVBQUVDLFVBQVUsQ0FBQztFQUVoQyxTQUFTRCxTQUFTQSxDQUFBLEVBQUc7SUFDbkJmLGVBQWUsQ0FBQyxJQUFJLEVBQUVlLFNBQVMsQ0FBQztJQUVoQ25DLElBQUksQ0FBQ3pCLE1BQU0sQ0FBQ3dDLGNBQWMsQ0FBQ29CLFNBQVMsQ0FBQ2hELFNBQVMsQ0FBQyxFQUFFLGFBQWEsRUFBRSxJQUFJLENBQUMsQ0FBQ2tELEtBQUssQ0FBQyxJQUFJLEVBQUV0RCxTQUFTLENBQUM7RUFDOUY7RUFFQU8sWUFBWSxDQUFDNkMsU0FBUyxFQUFFLENBQUM7SUFDdkJqRCxHQUFHLEVBQUUsZUFBZTtJQUNwQlIsS0FBSyxFQUFFLFNBQVM0RCxhQUFhQSxDQUFDQyxJQUFJLEVBQUU7TUFDbEMsT0FBTztRQUNMQyxRQUFRLEVBQUUsVUFBVTtRQUNwQkMsS0FBSyxFQUFFLENBQUM7UUFDUkMsTUFBTSxFQUFFLEVBQUU7UUFDVkMsU0FBUyxFQUFFSixJQUFJLEtBQUssUUFBUSxHQUFHLGVBQWUsR0FBRztNQUNuRCxDQUFDO0lBQ0g7RUFDRixDQUFDLEVBQUU7SUFDRHJELEdBQUcsRUFBRSxRQUFRO0lBQ2JSLEtBQUssRUFBRSxTQUFTa0UsTUFBTUEsQ0FBQSxFQUFHO01BQ3ZCLElBQUlDLEtBQUssR0FBRyxJQUFJO01BRWhCLElBQUlDLElBQUk7TUFDUixJQUFJQyxrQkFBa0IsR0FBRztRQUN2QlAsUUFBUSxFQUFFLFVBQVU7UUFDcEJDLEtBQUssRUFBRSxFQUFFO1FBQ1RDLE1BQU0sRUFBRSxFQUFFO1FBQ1ZNLEtBQUssRUFBRSxDQUFDO1FBQ1JDLEdBQUcsRUFBRTtNQUNQLENBQUM7TUFDRCxJQUFJQyxXQUFXLEdBQUc7UUFDaEJWLFFBQVEsRUFBRSxVQUFVO1FBQ3BCVyxJQUFJLEVBQUUsQ0FBQztRQUNQRixHQUFHLEVBQUUsQ0FBQztRQUNORyxNQUFNLEVBQUUsQ0FBQztRQUNUWCxLQUFLLEVBQUUsTUFBTTtRQUNiQyxNQUFNLEVBQUUsTUFBTTtRQUNkVyxNQUFNLEVBQUUsQ0FBQztRQUNUQyxPQUFPLEVBQUUsQ0FBQztRQUNWQyxNQUFNLEVBQUUsTUFBTTtRQUNkQyxRQUFRLEVBQUUsQ0FBQztRQUNYQyxVQUFVLEVBQUUsYUFBYTtRQUN6QkMsTUFBTSxFQUFFO01BQ1YsQ0FBQztNQUVELElBQUksSUFBSSxDQUFDbEUsS0FBSyxDQUFDbUUsVUFBVSxFQUFFO1FBQ3pCLElBQUlDLFVBQVUsR0FBRztVQUNmQyxTQUFTLEVBQUUsQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDckUsS0FBSyxDQUFDbUUsVUFBVSxDQUFDbkUsS0FBSyxDQUFDcUUsU0FBUyxJQUFJLEVBQUUsQ0FBQyxFQUFFQyxJQUFJLENBQUMsQ0FBQztVQUMvRUMsS0FBSyxFQUFFcEYsUUFBUSxDQUFDO1lBQUU4RCxLQUFLLEVBQUUsTUFBTTtZQUFFQyxNQUFNLEVBQUU7VUFBTyxDQUFDLEVBQUUsSUFBSSxDQUFDbEQsS0FBSyxDQUFDd0UsTUFBTSxDQUFDQyxPQUFPO1FBQzlFLENBQUM7UUFDRG5CLElBQUksR0FBR2QsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDa0MsWUFBWSxDQUFDLElBQUksQ0FBQzFFLEtBQUssQ0FBQ21FLFVBQVUsRUFBRUMsVUFBVSxDQUFDO01BQzNFLENBQUMsTUFBTTtRQUNMZCxJQUFJLEdBQUdkLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQ21DLGFBQWEsQ0FDckMsTUFBTSxFQUNOO1VBQUVKLEtBQUssRUFBRTtZQUFFdkIsUUFBUSxFQUFFLFVBQVU7WUFBRVMsR0FBRyxFQUFFLEtBQUs7WUFBRUQsS0FBSyxFQUFFO1VBQU87UUFBRSxDQUFDLEVBQzlELENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDb0IsR0FBRyxDQUFDLFVBQVU3QixJQUFJLEVBQUV6RCxDQUFDLEVBQUU7VUFDekMsT0FBT2tELE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQ21DLGFBQWEsQ0FBQyxNQUFNLEVBQUU7WUFDOUNqRixHQUFHLEVBQUVKLENBQUM7WUFDTitFLFNBQVMsRUFBRSxDQUFDLFdBQVcsR0FBR2hCLEtBQUssQ0FBQ3JELEtBQUssQ0FBQzZFLGNBQWMsRUFBRVAsSUFBSSxDQUFDLENBQUM7WUFDNURDLEtBQUssRUFBRXBGLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRWtFLEtBQUssQ0FBQ1AsYUFBYSxDQUFDQyxJQUFJLENBQUMsRUFBRU0sS0FBSyxDQUFDckQsS0FBSyxDQUFDd0UsTUFBTSxDQUFDQyxPQUFPO1VBQzNFLENBQUMsQ0FBQztRQUNKLENBQUMsQ0FDSCxDQUFDO01BQ0g7TUFFQSxPQUFPakMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDbUMsYUFBYSxDQUNyQyxLQUFLLEVBQ0w7UUFDRU4sU0FBUyxFQUFFLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDckUsS0FBSyxDQUFDcUUsU0FBUyxFQUFFQyxJQUFJLENBQUMsQ0FBQztRQUM3REMsS0FBSyxFQUFFcEYsUUFBUSxDQUFDLENBQUMsQ0FBQyxFQUFFb0Usa0JBQWtCLEVBQUUsSUFBSSxDQUFDdkQsS0FBSyxDQUFDd0UsTUFBTSxDQUFDTSxhQUFhO01BQ3pFLENBQUMsRUFDRHRDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQ21DLGFBQWEsQ0FDOUIsUUFBUSxFQUNSeEYsUUFBUSxDQUFDO1FBQ1A0RCxJQUFJLEVBQUUsUUFBUTtRQUNkZ0MsRUFBRSxFQUFFLHdCQUF3QjtRQUM1QkMsT0FBTyxFQUFFLElBQUksQ0FBQ2hGLEtBQUssQ0FBQ2dGLE9BQU87UUFDM0JULEtBQUssRUFBRWI7TUFDVCxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMxRCxLQUFLLENBQUNpRixNQUFNLElBQUk7UUFBRUMsUUFBUSxFQUFFLENBQUM7TUFBRSxDQUFDLENBQUMsRUFDMUMsWUFDRixDQUFDLEVBQ0Q1QixJQUNGLENBQUM7SUFDSDtFQUNGLENBQUMsQ0FBQyxDQUFDO0VBRUgsT0FBT1gsU0FBUztBQUNsQixDQUFDLENBQUVMLE1BQU0sQ0FBQzZDLFNBQVMsQ0FBQztBQUVwQmxHLGtCQUFrQixHQUFHMEQsU0FBUztBQUU5QkEsU0FBUyxDQUFDeUMsU0FBUyxHQUFHO0VBQ3BCUCxjQUFjLEVBQUVuQyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMyQyxNQUFNO0VBQzdDbEIsVUFBVSxFQUFFekIsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDNEMsT0FBTztFQUMxQ0wsTUFBTSxFQUFFdkMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDNkMsSUFBSTtFQUNuQ2YsTUFBTSxFQUFFOUIsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDM0I7QUFDakMsQ0FBQztBQUVENEIsU0FBUyxDQUFDNkMsWUFBWSxHQUFHO0VBQ3ZCWCxjQUFjLEVBQUUsRUFBRTtFQUNsQlIsU0FBUyxFQUFFLEVBQUU7RUFDYkcsTUFBTSxFQUFFLENBQUMsQ0FBQztFQUNWUyxNQUFNLEVBQUU7QUFDVixDQUFDO0FBQ0RRLE1BQU0sQ0FBQ3hHLE9BQU8sR0FBR0EsT0FBTyxDQUFDLFNBQVMsQ0FBQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxYeEdvb1xccGVyc29uYWwtc2l0ZVxcbm9kZV9tb2R1bGVzXFxyZWFjdC1idXJnZXItbWVudVxcbGliXFxjb21wb25lbnRzXFxDcm9zc0ljb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9jcmVhdGVDbGFzcyA9IChmdW5jdGlvbiAoKSB7IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBwcm9wcykgeyBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7IHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07IGRlc2NyaXB0b3IuZW51bWVyYWJsZSA9IGRlc2NyaXB0b3IuZW51bWVyYWJsZSB8fCBmYWxzZTsgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlOyBpZiAoJ3ZhbHVlJyBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSkoKTtcblxudmFyIF9nZXQgPSBmdW5jdGlvbiBnZXQoX3gsIF94MiwgX3gzKSB7IHZhciBfYWdhaW4gPSB0cnVlOyBfZnVuY3Rpb246IHdoaWxlIChfYWdhaW4pIHsgdmFyIG9iamVjdCA9IF94LCBwcm9wZXJ0eSA9IF94MiwgcmVjZWl2ZXIgPSBfeDM7IF9hZ2FpbiA9IGZhbHNlOyBpZiAob2JqZWN0ID09PSBudWxsKSBvYmplY3QgPSBGdW5jdGlvbi5wcm90b3R5cGU7IHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHByb3BlcnR5KTsgaWYgKGRlc2MgPT09IHVuZGVmaW5lZCkgeyB2YXIgcGFyZW50ID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iamVjdCk7IGlmIChwYXJlbnQgPT09IG51bGwpIHsgcmV0dXJuIHVuZGVmaW5lZDsgfSBlbHNlIHsgX3ggPSBwYXJlbnQ7IF94MiA9IHByb3BlcnR5OyBfeDMgPSByZWNlaXZlcjsgX2FnYWluID0gdHJ1ZTsgZGVzYyA9IHBhcmVudCA9IHVuZGVmaW5lZDsgY29udGludWUgX2Z1bmN0aW9uOyB9IH0gZWxzZSBpZiAoJ3ZhbHVlJyBpbiBkZXNjKSB7IHJldHVybiBkZXNjLnZhbHVlOyB9IGVsc2UgeyB2YXIgZ2V0dGVyID0gZGVzYy5nZXQ7IGlmIChnZXR0ZXIgPT09IHVuZGVmaW5lZCkgeyByZXR1cm4gdW5kZWZpbmVkOyB9IHJldHVybiBnZXR0ZXIuY2FsbChyZWNlaXZlcik7IH0gfSB9O1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uJyk7IH0gfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSAnZnVuY3Rpb24nICYmIHN1cGVyQ2xhc3MgIT09IG51bGwpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCAnICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgQ3Jvc3NJY29uID0gKGZ1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhDcm9zc0ljb24sIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIENyb3NzSWNvbigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ3Jvc3NJY29uKTtcblxuICAgIF9nZXQoT2JqZWN0LmdldFByb3RvdHlwZU9mKENyb3NzSWNvbi5wcm90b3R5cGUpLCAnY29uc3RydWN0b3InLCB0aGlzKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENyb3NzSWNvbiwgW3tcbiAgICBrZXk6ICdnZXRDcm9zc1N0eWxlJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q3Jvc3NTdHlsZSh0eXBlKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgd2lkdGg6IDMsXG4gICAgICAgIGhlaWdodDogMTQsXG4gICAgICAgIHRyYW5zZm9ybTogdHlwZSA9PT0gJ2JlZm9yZScgPyAncm90YXRlKDQ1ZGVnKScgOiAncm90YXRlKC00NWRlZyknXG4gICAgICB9O1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHZhciBpY29uO1xuICAgICAgdmFyIGJ1dHRvbldyYXBwZXJTdHlsZSA9IHtcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIHdpZHRoOiAyNCxcbiAgICAgICAgaGVpZ2h0OiAyNCxcbiAgICAgICAgcmlnaHQ6IDgsXG4gICAgICAgIHRvcDogOFxuICAgICAgfTtcbiAgICAgIHZhciBidXR0b25TdHlsZSA9IHtcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIHRvcDogMCxcbiAgICAgICAgekluZGV4OiAxLFxuICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgICAgbWFyZ2luOiAwLFxuICAgICAgICBwYWRkaW5nOiAwLFxuICAgICAgICBib3JkZXI6ICdub25lJyxcbiAgICAgICAgZm9udFNpemU6IDAsXG4gICAgICAgIGJhY2tncm91bmQ6ICd0cmFuc3BhcmVudCcsXG4gICAgICAgIGN1cnNvcjogJ3BvaW50ZXInXG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5wcm9wcy5jdXN0b21JY29uKSB7XG4gICAgICAgIHZhciBleHRyYVByb3BzID0ge1xuICAgICAgICAgIGNsYXNzTmFtZTogKCdibS1jcm9zcyAnICsgKHRoaXMucHJvcHMuY3VzdG9tSWNvbi5wcm9wcy5jbGFzc05hbWUgfHwgJycpKS50cmltKCksXG4gICAgICAgICAgc3R5bGU6IF9leHRlbmRzKHsgd2lkdGg6ICcxMDAlJywgaGVpZ2h0OiAnMTAwJScgfSwgdGhpcy5wcm9wcy5zdHlsZXMuYm1Dcm9zcylcbiAgICAgICAgfTtcbiAgICAgICAgaWNvbiA9IF9yZWFjdDJbJ2RlZmF1bHQnXS5jbG9uZUVsZW1lbnQodGhpcy5wcm9wcy5jdXN0b21JY29uLCBleHRyYVByb3BzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGljb24gPSBfcmVhY3QyWydkZWZhdWx0J10uY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAnc3BhbicsXG4gICAgICAgICAgeyBzdHlsZTogeyBwb3NpdGlvbjogJ2Fic29sdXRlJywgdG9wOiAnNnB4JywgcmlnaHQ6ICcxNHB4JyB9IH0sXG4gICAgICAgICAgWydiZWZvcmUnLCAnYWZ0ZXInXS5tYXAoZnVuY3Rpb24gKHR5cGUsIGkpIHtcbiAgICAgICAgICAgIHJldHVybiBfcmVhY3QyWydkZWZhdWx0J10uY3JlYXRlRWxlbWVudCgnc3BhbicsIHtcbiAgICAgICAgICAgICAga2V5OiBpLFxuICAgICAgICAgICAgICBjbGFzc05hbWU6ICgnYm0tY3Jvc3MgJyArIF90aGlzLnByb3BzLmNyb3NzQ2xhc3NOYW1lKS50cmltKCksXG4gICAgICAgICAgICAgIHN0eWxlOiBfZXh0ZW5kcyh7fSwgX3RoaXMuZ2V0Q3Jvc3NTdHlsZSh0eXBlKSwgX3RoaXMucHJvcHMuc3R5bGVzLmJtQ3Jvc3MpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3JlYWN0MlsnZGVmYXVsdCddLmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdkaXYnLFxuICAgICAgICB7XG4gICAgICAgICAgY2xhc3NOYW1lOiAoJ2JtLWNyb3NzLWJ1dHRvbiAnICsgdGhpcy5wcm9wcy5jbGFzc05hbWUpLnRyaW0oKSxcbiAgICAgICAgICBzdHlsZTogX2V4dGVuZHMoe30sIGJ1dHRvbldyYXBwZXJTdHlsZSwgdGhpcy5wcm9wcy5zdHlsZXMuYm1Dcm9zc0J1dHRvbilcbiAgICAgICAgfSxcbiAgICAgICAgX3JlYWN0MlsnZGVmYXVsdCddLmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgJ2J1dHRvbicsXG4gICAgICAgICAgX2V4dGVuZHMoe1xuICAgICAgICAgICAgdHlwZTogJ2J1dHRvbicsXG4gICAgICAgICAgICBpZDogJ3JlYWN0LWJ1cmdlci1jcm9zcy1idG4nLFxuICAgICAgICAgICAgb25DbGljazogdGhpcy5wcm9wcy5vbkNsaWNrLFxuICAgICAgICAgICAgc3R5bGU6IGJ1dHRvblN0eWxlXG4gICAgICAgICAgfSwgIXRoaXMucHJvcHMuaXNPcGVuICYmIHsgdGFiSW5kZXg6IC0xIH0pLFxuICAgICAgICAgICdDbG9zZSBNZW51J1xuICAgICAgICApLFxuICAgICAgICBpY29uXG4gICAgICApO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDcm9zc0ljb247XG59KShfcmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0c1snZGVmYXVsdCddID0gQ3Jvc3NJY29uO1xuXG5Dcm9zc0ljb24ucHJvcFR5cGVzID0ge1xuICBjcm9zc0NsYXNzTmFtZTogX3Byb3BUeXBlczJbJ2RlZmF1bHQnXS5zdHJpbmcsXG4gIGN1c3RvbUljb246IF9wcm9wVHlwZXMyWydkZWZhdWx0J10uZWxlbWVudCxcbiAgaXNPcGVuOiBfcHJvcFR5cGVzMlsnZGVmYXVsdCddLmJvb2wsXG4gIHN0eWxlczogX3Byb3BUeXBlczJbJ2RlZmF1bHQnXS5vYmplY3Rcbn07XG5cbkNyb3NzSWNvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIGNyb3NzQ2xhc3NOYW1lOiAnJyxcbiAgY2xhc3NOYW1lOiAnJyxcbiAgc3R5bGVzOiB7fSxcbiAgaXNPcGVuOiBmYWxzZVxufTtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIl9leHRlbmRzIiwiYXNzaWduIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIl9jcmVhdGVDbGFzcyIsImRlZmluZVByb3BlcnRpZXMiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJDb25zdHJ1Y3RvciIsInByb3RvUHJvcHMiLCJzdGF0aWNQcm9wcyIsIl9nZXQiLCJnZXQiLCJfeCIsIl94MiIsIl94MyIsIl9hZ2FpbiIsIl9mdW5jdGlvbiIsIm9iamVjdCIsInByb3BlcnR5IiwicmVjZWl2ZXIiLCJGdW5jdGlvbiIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1bmRlZmluZWQiLCJwYXJlbnQiLCJnZXRQcm90b3R5cGVPZiIsImdldHRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJvYmoiLCJfX2VzTW9kdWxlIiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJUeXBlRXJyb3IiLCJfaW5oZXJpdHMiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX3JlYWN0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfcHJvcFR5cGVzIiwiX3Byb3BUeXBlczIiLCJDcm9zc0ljb24iLCJfQ29tcG9uZW50IiwiYXBwbHkiLCJnZXRDcm9zc1N0eWxlIiwidHlwZSIsInBvc2l0aW9uIiwid2lkdGgiLCJoZWlnaHQiLCJ0cmFuc2Zvcm0iLCJyZW5kZXIiLCJfdGhpcyIsImljb24iLCJidXR0b25XcmFwcGVyU3R5bGUiLCJyaWdodCIsInRvcCIsImJ1dHRvblN0eWxlIiwibGVmdCIsInpJbmRleCIsIm1hcmdpbiIsInBhZGRpbmciLCJib3JkZXIiLCJmb250U2l6ZSIsImJhY2tncm91bmQiLCJjdXJzb3IiLCJjdXN0b21JY29uIiwiZXh0cmFQcm9wcyIsImNsYXNzTmFtZSIsInRyaW0iLCJzdHlsZSIsInN0eWxlcyIsImJtQ3Jvc3MiLCJjbG9uZUVsZW1lbnQiLCJjcmVhdGVFbGVtZW50IiwibWFwIiwiY3Jvc3NDbGFzc05hbWUiLCJibUNyb3NzQnV0dG9uIiwiaWQiLCJvbkNsaWNrIiwiaXNPcGVuIiwidGFiSW5kZXgiLCJDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJzdHJpbmciLCJlbGVtZW50IiwiYm9vbCIsImRlZmF1bHRQcm9wcyIsIm1vZHVsZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-burger-menu/lib/components/CrossIcon.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-burger-menu/lib/helpers/baseStyles.js":
/*!******************************************************************!*\
  !*** ./node_modules/react-burger-menu/lib/helpers/baseStyles.js ***!
  \******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n  item: function item() {\n    return {\n      display: 'block'\n    };\n  }\n};\nexports[\"default\"] = styles;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1idXJnZXItbWVudS9saWIvaGVscGVycy9iYXNlU3R5bGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViQSw4Q0FBNkM7RUFDM0NHLEtBQUssRUFBRTtBQUNULENBQUMsRUFBQztBQUNGLElBQUlDLE1BQU0sR0FBRztFQUNYQyxPQUFPLEVBQUUsU0FBU0EsT0FBT0EsQ0FBQ0MsTUFBTSxFQUFFO0lBQ2hDLE9BQU87TUFDTEMsUUFBUSxFQUFFLE9BQU87TUFDakJDLE1BQU0sRUFBRSxJQUFJO01BQ1pDLEtBQUssRUFBRSxNQUFNO01BQ2JDLE1BQU0sRUFBRSxNQUFNO01BQ2RDLFVBQVUsRUFBRSxvQkFBb0I7TUFDaENDLE9BQU8sRUFBRU4sTUFBTSxHQUFHLENBQUMsR0FBRyxDQUFDO01BQ3ZCTyxZQUFZLEVBQUVQLE1BQU0sR0FBRyxFQUFFLEdBQUcseUJBQXlCO01BQ3JEUSxXQUFXLEVBQUVSLE1BQU0sR0FBRyxFQUFFLEdBQUcseUJBQXlCO01BQ3BEUyxVQUFVLEVBQUVULE1BQU0sR0FBRyxFQUFFLEdBQUcseUJBQXlCO01BQ25EVSxlQUFlLEVBQUVWLE1BQU0sR0FBRyxFQUFFLEdBQUcseUJBQXlCO01BQ3hEVyxTQUFTLEVBQUVYLE1BQU0sR0FBRyxFQUFFLEdBQUcseUJBQXlCO01BQ2xEWSxVQUFVLEVBQUVaLE1BQU0sR0FBRyxjQUFjLEdBQUc7SUFDeEMsQ0FBQztFQUNILENBQUM7RUFFRGEsUUFBUSxFQUFFLFNBQVNBLFFBQVFBLENBQUNiLE1BQU0sRUFBRUcsS0FBSyxFQUFFVyxLQUFLLEVBQUU7SUFDaEQsT0FBTztNQUNMYixRQUFRLEVBQUUsT0FBTztNQUNqQmEsS0FBSyxFQUFFQSxLQUFLLEdBQUcsQ0FBQyxHQUFHLFNBQVM7TUFDNUJaLE1BQU0sRUFBRSxJQUFJO01BQ1pDLEtBQUssRUFBRUEsS0FBSztNQUNaQyxNQUFNLEVBQUUsTUFBTTtNQUNkRyxZQUFZLEVBQUVQLE1BQU0sR0FBRyxFQUFFLEdBQUdjLEtBQUssR0FBRyx5QkFBeUIsR0FBRywwQkFBMEI7TUFDMUZOLFdBQVcsRUFBRVIsTUFBTSxHQUFHLEVBQUUsR0FBR2MsS0FBSyxHQUFHLHlCQUF5QixHQUFHLDBCQUEwQjtNQUN6RkwsVUFBVSxFQUFFVCxNQUFNLEdBQUcsRUFBRSxHQUFHYyxLQUFLLEdBQUcseUJBQXlCLEdBQUcsMEJBQTBCO01BQ3hGSixlQUFlLEVBQUVWLE1BQU0sR0FBRyxFQUFFLEdBQUdjLEtBQUssR0FBRyx5QkFBeUIsR0FBRywwQkFBMEI7TUFDN0ZILFNBQVMsRUFBRVgsTUFBTSxHQUFHLEVBQUUsR0FBR2MsS0FBSyxHQUFHLHlCQUF5QixHQUFHLDBCQUEwQjtNQUN2RkYsVUFBVSxFQUFFO0lBQ2QsQ0FBQztFQUNILENBQUM7RUFFREcsSUFBSSxFQUFFLFNBQVNBLElBQUlBLENBQUEsRUFBRztJQUNwQixPQUFPO01BQ0xYLE1BQU0sRUFBRSxNQUFNO01BQ2RZLFNBQVMsRUFBRSxZQUFZO01BQ3ZCQyxRQUFRLEVBQUU7SUFDWixDQUFDO0VBQ0gsQ0FBQztFQUVEQyxRQUFRLEVBQUUsU0FBU0EsUUFBUUEsQ0FBQSxFQUFHO0lBQzVCLE9BQU87TUFDTGQsTUFBTSxFQUFFO0lBQ1YsQ0FBQztFQUNILENBQUM7RUFFRGUsSUFBSSxFQUFFLFNBQVNBLElBQUlBLENBQUEsRUFBRztJQUNwQixPQUFPO01BQ0xDLE9BQU8sRUFBRTtJQUNYLENBQUM7RUFDSDtBQUNGLENBQUM7QUFFRHhCLGtCQUFrQixHQUFHRSxNQUFNO0FBQzNCdUIsTUFBTSxDQUFDekIsT0FBTyxHQUFHQSxPQUFPLENBQUMsU0FBUyxDQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFh4R29vXFxwZXJzb25hbC1zaXRlXFxub2RlX21vZHVsZXNcXHJlYWN0LWJ1cmdlci1tZW51XFxsaWJcXGhlbHBlcnNcXGJhc2VTdHlsZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbnZhciBzdHlsZXMgPSB7XG4gIG92ZXJsYXk6IGZ1bmN0aW9uIG92ZXJsYXkoaXNPcGVuKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgekluZGV4OiAxMDAwLFxuICAgICAgd2lkdGg6ICcxMDAlJyxcbiAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgYmFja2dyb3VuZDogJ3JnYmEoMCwgMCwgMCwgMC4zKScsXG4gICAgICBvcGFjaXR5OiBpc09wZW4gPyAxIDogMCxcbiAgICAgIE1velRyYW5zZm9ybTogaXNPcGVuID8gJycgOiAndHJhbnNsYXRlM2QoMTAwJSwgMCwgMCknLFxuICAgICAgTXNUcmFuc2Zvcm06IGlzT3BlbiA/ICcnIDogJ3RyYW5zbGF0ZTNkKDEwMCUsIDAsIDApJyxcbiAgICAgIE9UcmFuc2Zvcm06IGlzT3BlbiA/ICcnIDogJ3RyYW5zbGF0ZTNkKDEwMCUsIDAsIDApJyxcbiAgICAgIFdlYmtpdFRyYW5zZm9ybTogaXNPcGVuID8gJycgOiAndHJhbnNsYXRlM2QoMTAwJSwgMCwgMCknLFxuICAgICAgdHJhbnNmb3JtOiBpc09wZW4gPyAnJyA6ICd0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKScsXG4gICAgICB0cmFuc2l0aW9uOiBpc09wZW4gPyAnb3BhY2l0eSAwLjNzJyA6ICdvcGFjaXR5IDAuM3MsIHRyYW5zZm9ybSAwcyAwLjNzJ1xuICAgIH07XG4gIH0sXG5cbiAgbWVudVdyYXA6IGZ1bmN0aW9uIG1lbnVXcmFwKGlzT3Blbiwgd2lkdGgsIHJpZ2h0KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgcmlnaHQ6IHJpZ2h0ID8gMCA6ICdpbmhlcml0JyxcbiAgICAgIHpJbmRleDogMTEwMCxcbiAgICAgIHdpZHRoOiB3aWR0aCxcbiAgICAgIGhlaWdodDogJzEwMCUnLFxuICAgICAgTW96VHJhbnNmb3JtOiBpc09wZW4gPyAnJyA6IHJpZ2h0ID8gJ3RyYW5zbGF0ZTNkKDEwMCUsIDAsIDApJyA6ICd0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCknLFxuICAgICAgTXNUcmFuc2Zvcm06IGlzT3BlbiA/ICcnIDogcmlnaHQgPyAndHJhbnNsYXRlM2QoMTAwJSwgMCwgMCknIDogJ3RyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKScsXG4gICAgICBPVHJhbnNmb3JtOiBpc09wZW4gPyAnJyA6IHJpZ2h0ID8gJ3RyYW5zbGF0ZTNkKDEwMCUsIDAsIDApJyA6ICd0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCknLFxuICAgICAgV2Via2l0VHJhbnNmb3JtOiBpc09wZW4gPyAnJyA6IHJpZ2h0ID8gJ3RyYW5zbGF0ZTNkKDEwMCUsIDAsIDApJyA6ICd0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCknLFxuICAgICAgdHJhbnNmb3JtOiBpc09wZW4gPyAnJyA6IHJpZ2h0ID8gJ3RyYW5zbGF0ZTNkKDEwMCUsIDAsIDApJyA6ICd0cmFuc2xhdGUzZCgtMTAwJSwgMCwgMCknLFxuICAgICAgdHJhbnNpdGlvbjogJ2FsbCAwLjVzJ1xuICAgIH07XG4gIH0sXG5cbiAgbWVudTogZnVuY3Rpb24gbWVudSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICAgIG92ZXJmbG93OiAnYXV0bydcbiAgICB9O1xuICB9LFxuXG4gIGl0ZW1MaXN0OiBmdW5jdGlvbiBpdGVtTGlzdCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGVpZ2h0OiAnMTAwJSdcbiAgICB9O1xuICB9LFxuXG4gIGl0ZW06IGZ1bmN0aW9uIGl0ZW0oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc3BsYXk6ICdibG9jaydcbiAgICB9O1xuICB9XG59O1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSBzdHlsZXM7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzdHlsZXMiLCJvdmVybGF5IiwiaXNPcGVuIiwicG9zaXRpb24iLCJ6SW5kZXgiLCJ3aWR0aCIsImhlaWdodCIsImJhY2tncm91bmQiLCJvcGFjaXR5IiwiTW96VHJhbnNmb3JtIiwiTXNUcmFuc2Zvcm0iLCJPVHJhbnNmb3JtIiwiV2Via2l0VHJhbnNmb3JtIiwidHJhbnNmb3JtIiwidHJhbnNpdGlvbiIsIm1lbnVXcmFwIiwicmlnaHQiLCJtZW51IiwiYm94U2l6aW5nIiwib3ZlcmZsb3ciLCJpdGVtTGlzdCIsIml0ZW0iLCJkaXNwbGF5IiwibW9kdWxlIl0sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-burger-menu/lib/helpers/baseStyles.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-burger-menu/lib/helpers/dom.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-burger-menu/lib/helpers/dom.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.focusOnFirstMenuItem = focusOnFirstMenuItem;\nexports.focusOnLastMenuItem = focusOnLastMenuItem;\nexports.focusOnCrossButton = focusOnCrossButton;\nexports.focusOnMenuButton = focusOnMenuButton;\nexports.focusOnMenuItem = focusOnMenuItem;\nexports.focusOnNextMenuItem = focusOnNextMenuItem;\nexports.focusOnPreviousMenuItem = focusOnPreviousMenuItem;\nfunction focusOnFirstMenuItem() {\n  var firstItem = Array.from(document.getElementsByClassName('bm-item')).shift();\n  if (firstItem) {\n    firstItem.focus();\n  }\n}\nfunction focusOnLastMenuItem() {\n  var lastItem = Array.from(document.getElementsByClassName('bm-item')).pop();\n  if (lastItem) {\n    lastItem.focus();\n  }\n}\nfunction focusOnCrossButton() {\n  var crossButton = document.getElementById('react-burger-cross-btn');\n  if (crossButton) {\n    crossButton.focus();\n  }\n}\nfunction focusOnMenuButton() {\n  var menuButton = document.getElementById('react-burger-menu-btn');\n  if (menuButton) {\n    menuButton.focus();\n  }\n}\nfunction focusOnMenuItem(siblingType) {\n  if (document.activeElement.className.includes('bm-item')) {\n    var sibling = document.activeElement[siblingType];\n    if (sibling) {\n      sibling.focus();\n    } else {\n      focusOnCrossButton();\n    }\n  } else {\n    if (siblingType === 'previousElementSibling') {\n      focusOnLastMenuItem();\n    } else {\n      focusOnFirstMenuItem();\n    }\n  }\n}\nfunction focusOnNextMenuItem() {\n  focusOnMenuItem('nextElementSibling');\n}\nfunction focusOnPreviousMenuItem() {\n  focusOnMenuItem('previousElementSibling');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1idXJnZXItbWVudS9saWIvaGVscGVycy9kb20uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBQ0ZELDRCQUE0QixHQUFHRSxvQkFBb0I7QUFDbkRGLDJCQUEyQixHQUFHRyxtQkFBbUI7QUFDakRILDBCQUEwQixHQUFHSSxrQkFBa0I7QUFDL0NKLHlCQUF5QixHQUFHSyxpQkFBaUI7QUFDN0NMLHVCQUF1QixHQUFHTSxlQUFlO0FBQ3pDTiwyQkFBMkIsR0FBR08sbUJBQW1CO0FBQ2pEUCwrQkFBK0IsR0FBR1EsdUJBQXVCO0FBRXpELFNBQVNOLG9CQUFvQkEsQ0FBQSxFQUFHO0VBQzlCLElBQUlPLFNBQVMsR0FBR0MsS0FBSyxDQUFDQyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0Msc0JBQXNCLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQ0MsS0FBSyxDQUFDLENBQUM7RUFDOUUsSUFBSUwsU0FBUyxFQUFFO0lBQ2JBLFNBQVMsQ0FBQ00sS0FBSyxDQUFDLENBQUM7RUFDbkI7QUFDRjtBQUVBLFNBQVNaLG1CQUFtQkEsQ0FBQSxFQUFHO0VBQzdCLElBQUlhLFFBQVEsR0FBR04sS0FBSyxDQUFDQyxJQUFJLENBQUNDLFFBQVEsQ0FBQ0Msc0JBQXNCLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQ0ksR0FBRyxDQUFDLENBQUM7RUFDM0UsSUFBSUQsUUFBUSxFQUFFO0lBQ1pBLFFBQVEsQ0FBQ0QsS0FBSyxDQUFDLENBQUM7RUFDbEI7QUFDRjtBQUVBLFNBQVNYLGtCQUFrQkEsQ0FBQSxFQUFHO0VBQzVCLElBQUljLFdBQVcsR0FBR04sUUFBUSxDQUFDTyxjQUFjLENBQUMsd0JBQXdCLENBQUM7RUFDbkUsSUFBSUQsV0FBVyxFQUFFO0lBQ2ZBLFdBQVcsQ0FBQ0gsS0FBSyxDQUFDLENBQUM7RUFDckI7QUFDRjtBQUVBLFNBQVNWLGlCQUFpQkEsQ0FBQSxFQUFHO0VBQzNCLElBQUllLFVBQVUsR0FBR1IsUUFBUSxDQUFDTyxjQUFjLENBQUMsdUJBQXVCLENBQUM7RUFDakUsSUFBSUMsVUFBVSxFQUFFO0lBQ2RBLFVBQVUsQ0FBQ0wsS0FBSyxDQUFDLENBQUM7RUFDcEI7QUFDRjtBQUVBLFNBQVNULGVBQWVBLENBQUNlLFdBQVcsRUFBRTtFQUNwQyxJQUFJVCxRQUFRLENBQUNVLGFBQWEsQ0FBQ0MsU0FBUyxDQUFDQyxRQUFRLENBQUMsU0FBUyxDQUFDLEVBQUU7SUFDeEQsSUFBSUMsT0FBTyxHQUFHYixRQUFRLENBQUNVLGFBQWEsQ0FBQ0QsV0FBVyxDQUFDO0lBQ2pELElBQUlJLE9BQU8sRUFBRTtNQUNYQSxPQUFPLENBQUNWLEtBQUssQ0FBQyxDQUFDO0lBQ2pCLENBQUMsTUFBTTtNQUNMWCxrQkFBa0IsQ0FBQyxDQUFDO0lBQ3RCO0VBQ0YsQ0FBQyxNQUFNO0lBQ0wsSUFBSWlCLFdBQVcsS0FBSyx3QkFBd0IsRUFBRTtNQUM1Q2xCLG1CQUFtQixDQUFDLENBQUM7SUFDdkIsQ0FBQyxNQUFNO01BQ0xELG9CQUFvQixDQUFDLENBQUM7SUFDeEI7RUFDRjtBQUNGO0FBRUEsU0FBU0ssbUJBQW1CQSxDQUFBLEVBQUc7RUFDN0JELGVBQWUsQ0FBQyxvQkFBb0IsQ0FBQztBQUN2QztBQUVBLFNBQVNFLHVCQUF1QkEsQ0FBQSxFQUFHO0VBQ2pDRixlQUFlLENBQUMsd0JBQXdCLENBQUM7QUFDM0MiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcWHhHb29cXHBlcnNvbmFsLXNpdGVcXG5vZGVfbW9kdWxlc1xccmVhY3QtYnVyZ2VyLW1lbnVcXGxpYlxcaGVscGVyc1xcZG9tLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmZvY3VzT25GaXJzdE1lbnVJdGVtID0gZm9jdXNPbkZpcnN0TWVudUl0ZW07XG5leHBvcnRzLmZvY3VzT25MYXN0TWVudUl0ZW0gPSBmb2N1c09uTGFzdE1lbnVJdGVtO1xuZXhwb3J0cy5mb2N1c09uQ3Jvc3NCdXR0b24gPSBmb2N1c09uQ3Jvc3NCdXR0b247XG5leHBvcnRzLmZvY3VzT25NZW51QnV0dG9uID0gZm9jdXNPbk1lbnVCdXR0b247XG5leHBvcnRzLmZvY3VzT25NZW51SXRlbSA9IGZvY3VzT25NZW51SXRlbTtcbmV4cG9ydHMuZm9jdXNPbk5leHRNZW51SXRlbSA9IGZvY3VzT25OZXh0TWVudUl0ZW07XG5leHBvcnRzLmZvY3VzT25QcmV2aW91c01lbnVJdGVtID0gZm9jdXNPblByZXZpb3VzTWVudUl0ZW07XG5cbmZ1bmN0aW9uIGZvY3VzT25GaXJzdE1lbnVJdGVtKCkge1xuICB2YXIgZmlyc3RJdGVtID0gQXJyYXkuZnJvbShkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdibS1pdGVtJykpLnNoaWZ0KCk7XG4gIGlmIChmaXJzdEl0ZW0pIHtcbiAgICBmaXJzdEl0ZW0uZm9jdXMoKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBmb2N1c09uTGFzdE1lbnVJdGVtKCkge1xuICB2YXIgbGFzdEl0ZW0gPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2JtLWl0ZW0nKSkucG9wKCk7XG4gIGlmIChsYXN0SXRlbSkge1xuICAgIGxhc3RJdGVtLmZvY3VzKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZm9jdXNPbkNyb3NzQnV0dG9uKCkge1xuICB2YXIgY3Jvc3NCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVhY3QtYnVyZ2VyLWNyb3NzLWJ0bicpO1xuICBpZiAoY3Jvc3NCdXR0b24pIHtcbiAgICBjcm9zc0J1dHRvbi5mb2N1cygpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGZvY3VzT25NZW51QnV0dG9uKCkge1xuICB2YXIgbWVudUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZWFjdC1idXJnZXItbWVudS1idG4nKTtcbiAgaWYgKG1lbnVCdXR0b24pIHtcbiAgICBtZW51QnV0dG9uLmZvY3VzKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gZm9jdXNPbk1lbnVJdGVtKHNpYmxpbmdUeXBlKSB7XG4gIGlmIChkb2N1bWVudC5hY3RpdmVFbGVtZW50LmNsYXNzTmFtZS5pbmNsdWRlcygnYm0taXRlbScpKSB7XG4gICAgdmFyIHNpYmxpbmcgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50W3NpYmxpbmdUeXBlXTtcbiAgICBpZiAoc2libGluZykge1xuICAgICAgc2libGluZy5mb2N1cygpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb2N1c09uQ3Jvc3NCdXR0b24oKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgaWYgKHNpYmxpbmdUeXBlID09PSAncHJldmlvdXNFbGVtZW50U2libGluZycpIHtcbiAgICAgIGZvY3VzT25MYXN0TWVudUl0ZW0oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9jdXNPbkZpcnN0TWVudUl0ZW0oKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gZm9jdXNPbk5leHRNZW51SXRlbSgpIHtcbiAgZm9jdXNPbk1lbnVJdGVtKCduZXh0RWxlbWVudFNpYmxpbmcnKTtcbn1cblxuZnVuY3Rpb24gZm9jdXNPblByZXZpb3VzTWVudUl0ZW0oKSB7XG4gIGZvY3VzT25NZW51SXRlbSgncHJldmlvdXNFbGVtZW50U2libGluZycpO1xufSJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImZvY3VzT25GaXJzdE1lbnVJdGVtIiwiZm9jdXNPbkxhc3RNZW51SXRlbSIsImZvY3VzT25Dcm9zc0J1dHRvbiIsImZvY3VzT25NZW51QnV0dG9uIiwiZm9jdXNPbk1lbnVJdGVtIiwiZm9jdXNPbk5leHRNZW51SXRlbSIsImZvY3VzT25QcmV2aW91c01lbnVJdGVtIiwiZmlyc3RJdGVtIiwiQXJyYXkiLCJmcm9tIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwic2hpZnQiLCJmb2N1cyIsImxhc3RJdGVtIiwicG9wIiwiY3Jvc3NCdXR0b24iLCJnZXRFbGVtZW50QnlJZCIsIm1lbnVCdXR0b24iLCJzaWJsaW5nVHlwZSIsImFjdGl2ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJpbmNsdWRlcyIsInNpYmxpbmciXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-burger-menu/lib/helpers/dom.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-burger-menu/lib/menuFactory.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-burger-menu/lib/menuFactory.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i['return']) _i['return']();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError('Invalid attempt to destructure non-iterable instance');\n    }\n  };\n}();\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nvar _react = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\nvar _react2 = _interopRequireDefault(_react);\nvar _reactDom = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom/index.js\");\nvar _reactDom2 = _interopRequireDefault(_reactDom);\nvar _propTypes = __webpack_require__(/*! prop-types */ \"(app-pages-browser)/./node_modules/prop-types/index.js\");\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _helpersBaseStyles = __webpack_require__(/*! ./helpers/baseStyles */ \"(app-pages-browser)/./node_modules/react-burger-menu/lib/helpers/baseStyles.js\");\nvar _helpersBaseStyles2 = _interopRequireDefault(_helpersBaseStyles);\nvar _helpersDom = __webpack_require__(/*! ./helpers/dom */ \"(app-pages-browser)/./node_modules/react-burger-menu/lib/helpers/dom.js\");\nvar _componentsBurgerIcon = __webpack_require__(/*! ./components/BurgerIcon */ \"(app-pages-browser)/./node_modules/react-burger-menu/lib/components/BurgerIcon.js\");\nvar _componentsBurgerIcon2 = _interopRequireDefault(_componentsBurgerIcon);\nvar _componentsCrossIcon = __webpack_require__(/*! ./components/CrossIcon */ \"(app-pages-browser)/./node_modules/react-burger-menu/lib/components/CrossIcon.js\");\nvar _componentsCrossIcon2 = _interopRequireDefault(_componentsCrossIcon);\nexports[\"default\"] = function (styles) {\n  var _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  if (!styles) {\n    throw new Error('No styles supplied');\n  }\n  var ARROW_DOWN = 'ArrowDown';\n  var ARROW_UP = 'ArrowUp';\n  var ESCAPE = 'Escape';\n  var SPACE = ' ';\n  var HOME = 'Home';\n  var END = 'End';\n  function usePrevious(value) {\n    _s2();\n    var ref = _react2['default'].useRef(value);\n    _react2['default'].useEffect(function () {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  _s2(usePrevious, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n  var Menu = function Menu(props) {\n    _s3();\n    var defaultProps = {\n      bodyClassName: '',\n      burgerBarClassName: '',\n      burgerButtonClassName: '',\n      className: '',\n      crossButtonClassName: '',\n      crossClassName: '',\n      disableAutoFocus: false,\n      disableCloseOnEsc: false,\n      htmlClassName: '',\n      id: '',\n      itemClassName: '',\n      itemListClassName: '',\n      menuClassName: '',\n      morphShapeClassName: '',\n      noOverlay: false,\n      noTransition: false,\n      onStateChange: function onStateChange() {},\n      outerContainerId: '',\n      overlayClassName: '',\n      pageWrapId: '',\n      styles: {},\n      width: 300,\n      onIconHoverChange: function onIconHoverChange() {},\n      itemListElement: 'nav'\n    };\n    props = _extends({}, defaultProps, props);\n    var _React$useState = _react2['default'].useState(false);\n    var _React$useState2 = _slicedToArray(_React$useState, 2);\n    var isOpen = _React$useState2[0];\n    var setIsOpen = _React$useState2[1];\n    var timeoutId = _react2['default'].useRef();\n    var toggleOptions = _react2['default'].useRef({});\n    var prevIsOpenProp = usePrevious(props.isOpen);\n    _react2['default'].useEffect(function () {\n      if (props.isOpen) {\n        toggleMenu({\n          isOpen: true,\n          noStateChange: true\n        });\n      }\n      return function cleanup() {\n        applyWrapperStyles(false);\n        clearCurrentTimeout();\n      };\n    }, []);\n    _react2['default'].useEffect(function () {\n      var wasToggled = typeof props.isOpen !== 'undefined' && props.isOpen !== isOpen && props.isOpen !== prevIsOpenProp;\n      if (wasToggled) {\n        toggleMenu();\n        // Toggling changes SVG animation requirements, so defer these until next update\n        return;\n      }\n      if (styles.svg) {\n        (function () {\n          var morphShape = document.getElementById('bm-morph-shape');\n          var path = styles.svg.lib(morphShape).select('path');\n          if (isOpen) {\n            // Animate SVG path\n            styles.svg.animate(path);\n          } else {\n            // Reset path (timeout ensures animation happens off screen)\n            setTimeout(function () {\n              path.attr('d', styles.svg.pathInitial);\n            }, 300);\n          }\n        })();\n      }\n    });\n    _react2['default'].useEffect(function () {\n      var _toggleOptions$current = toggleOptions.current;\n      var noStateChange = _toggleOptions$current.noStateChange;\n      var focusOnLastItem = _toggleOptions$current.focusOnLastItem;\n      if (!noStateChange) {\n        props.onStateChange({\n          isOpen: isOpen\n        });\n      }\n      if (!props.disableAutoFocus) {\n        // For accessibility reasons, ensures that when we toggle open,\n        // we focus the first or last menu item according to given parameter\n        if (isOpen) {\n          focusOnLastItem ? (0, _helpersDom.focusOnLastMenuItem)() : (0, _helpersDom.focusOnFirstMenuItem)();\n        } else {\n          if (document.activeElement) {\n            document.activeElement.blur();\n          } else {\n            document.body.blur(); // Needed for IE\n          }\n        }\n      }\n\n      // Timeout ensures wrappers are cleared after animation finishes\n      clearCurrentTimeout();\n      timeoutId.current = setTimeout(function () {\n        timeoutId.current = null;\n        if (!isOpen) {\n          applyWrapperStyles(false);\n        }\n      }, 500);\n\n      // Bind keydown handlers (or custom function if supplied)\n      var defaultOnKeyDown = isOpen ? onKeyDownOpen : onKeyDownClosed;\n      var onKeyDown = props.customOnKeyDown || defaultOnKeyDown;\n      window.addEventListener('keydown', onKeyDown);\n      return function cleanup() {\n        window.removeEventListener('keydown', onKeyDown);\n      };\n    }, [isOpen]);\n    function toggleMenu() {\n      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n      toggleOptions.current = options;\n      applyWrapperStyles();\n\n      // Ensures wrapper styles are applied before the menu is toggled\n      setTimeout(function () {\n        setIsOpen(function (open) {\n          return typeof options.isOpen !== 'undefined' ? options.isOpen : !open;\n        });\n      });\n    }\n    function open() {\n      if (typeof props.onOpen === 'function') {\n        props.onOpen();\n      } else {\n        toggleMenu();\n      }\n    }\n    function close() {\n      if (typeof props.onClose === 'function') {\n        props.onClose();\n      } else {\n        toggleMenu();\n      }\n    }\n    function getStyle(style, index) {\n      var _props = props;\n      var width = _props.width;\n      var right = _props.right;\n      var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n      return style(isOpen, formattedWidth, right, index);\n    }\n\n    // Builds styles incrementally for a given element\n    function getStyles(el, index, inline) {\n      var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n      // Set base styles\n      var output = _helpersBaseStyles2['default'][el] ? getStyle(_helpersBaseStyles2['default'][el]) : {};\n\n      // Add animation-specific styles\n      if (styles[el]) {\n        output = _extends({}, output, getStyle(styles[el], index + 1));\n      }\n\n      // Add custom styles\n      if (props.styles[propName]) {\n        output = _extends({}, output, props.styles[propName]);\n      }\n\n      // Add element inline styles\n      if (inline) {\n        output = _extends({}, output, inline);\n      }\n\n      // Remove transition if required\n      // (useful if rendering open initially)\n      if (props.noTransition) {\n        delete output.transition;\n      }\n      return output;\n    }\n\n    // Sets or unsets styles on DOM elements outside the menu component\n    // This is necessary for correct page interaction with some of the menus\n    // Throws and returns if the required external elements don't exist,\n    // which means any external page animations won't be applied\n    function handleExternalWrapper(id, wrapperStyles, set) {\n      var wrapper = document.getElementById(id);\n      if (!wrapper) {\n        console.error(\"Element with ID '\" + id + \"' not found\");\n        return;\n      }\n      var builtStyles = getStyle(wrapperStyles);\n      for (var prop in builtStyles) {\n        if (builtStyles.hasOwnProperty(prop)) {\n          wrapper.style[prop] = set ? builtStyles[prop] : '';\n        }\n      }\n\n      // Prevent any horizontal scroll\n      // Only set overflow-x as an inline style if htmlClassName or\n      // bodyClassName is not passed in. Otherwise, it is up to the caller to\n      // decide if they want to set the overflow style in CSS using the custom\n      // class names\n      var applyOverflow = function applyOverflow(el) {\n        return el.style['overflow-x'] = set ? 'hidden' : '';\n      };\n      if (!props.htmlClassName) {\n        applyOverflow(document.querySelector('html'));\n      }\n      if (!props.bodyClassName) {\n        applyOverflow(document.querySelector('body'));\n      }\n    }\n\n    // Applies component-specific styles to external wrapper elements\n    function applyWrapperStyles() {\n      var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n      var applyClass = function applyClass(el, className) {\n        return el.classList[set ? 'add' : 'remove'](className);\n      };\n      if (props.htmlClassName) {\n        applyClass(document.querySelector('html'), props.htmlClassName);\n      }\n      if (props.bodyClassName) {\n        applyClass(document.querySelector('body'), props.bodyClassName);\n      }\n      if (styles.pageWrap && props.pageWrapId) {\n        handleExternalWrapper(props.pageWrapId, styles.pageWrap, set);\n      }\n      if (styles.outerContainer && props.outerContainerId) {\n        handleExternalWrapper(props.outerContainerId, styles.outerContainer, set);\n      }\n      var menuWrap = document.querySelector('.bm-menu-wrap');\n      if (menuWrap) {\n        if (set) {\n          menuWrap.removeAttribute('hidden');\n        } else {\n          menuWrap.setAttribute('hidden', true);\n        }\n      }\n    }\n\n    // Avoids potentially attempting to update an unmounted component\n    function clearCurrentTimeout() {\n      if (timeoutId.current) {\n        clearTimeout(timeoutId.current);\n      }\n    }\n    function onKeyDownOpen(e) {\n      e = e || window.event;\n      switch (e.key) {\n        case ESCAPE:\n          // Close on ESC, unless disabled\n          if (!props.disableCloseOnEsc) {\n            close();\n            (0, _helpersDom.focusOnMenuButton)();\n          }\n          break;\n        case ARROW_DOWN:\n          (0, _helpersDom.focusOnNextMenuItem)();\n          break;\n        case ARROW_UP:\n          (0, _helpersDom.focusOnPreviousMenuItem)();\n          break;\n        case HOME:\n          (0, _helpersDom.focusOnFirstMenuItem)();\n          break;\n        case END:\n          (0, _helpersDom.focusOnLastMenuItem)();\n          break;\n      }\n    }\n    function onKeyDownClosed(e) {\n      e = e || window.event;\n      // Key downs came from menu button\n      if (e.target === document.getElementById('react-burger-menu-btn')) {\n        switch (e.key) {\n          case ARROW_DOWN:\n          case SPACE:\n            // If down arrow, space or enter, open menu and focus on first menuitem\n            toggleMenu();\n            break;\n          case ARROW_UP:\n            // If arrow up, open menu and focus on last menuitem\n            toggleMenu({\n              focusOnLastItem: true\n            });\n            break;\n        }\n      }\n    }\n    function handleOverlayClick() {\n      if (props.disableOverlayClick === true || typeof props.disableOverlayClick === 'function' && props.disableOverlayClick()) {\n        return;\n      } else {\n        close();\n      }\n    }\n    return _react2['default'].createElement('div', null, !props.noOverlay && _react2['default'].createElement('div', {\n      className: ('bm-overlay ' + props.overlayClassName).trim(),\n      onClick: handleOverlayClick,\n      style: getStyles('overlay')\n    }), props.customBurgerIcon !== false && _react2['default'].createElement('div', {\n      style: getStyles('burgerIcon')\n    }, _react2['default'].createElement(_componentsBurgerIcon2['default'], {\n      onClick: open,\n      styles: props.styles,\n      customIcon: props.customBurgerIcon,\n      className: props.burgerButtonClassName,\n      barClassName: props.burgerBarClassName,\n      onIconStateChange: props.onIconStateChange\n    })), _react2['default'].createElement('div', {\n      id: props.id,\n      className: ('bm-menu-wrap ' + props.className).trim(),\n      style: getStyles('menuWrap'),\n      'aria-hidden': !isOpen\n    }, styles.svg && _react2['default'].createElement('div', {\n      id: 'bm-morph-shape',\n      className: ('bm-morph-shape ' + props.morphShapeClassName).trim(),\n      style: getStyles('morphShape')\n    }, _react2['default'].createElement('svg', {\n      width: '100%',\n      height: '100%',\n      viewBox: '0 0 100 800',\n      preserveAspectRatio: 'none'\n    }, _react2['default'].createElement('path', {\n      d: styles.svg.pathInitial\n    }))), _react2['default'].createElement('div', {\n      className: ('bm-menu ' + props.menuClassName).trim(),\n      style: getStyles('menu')\n    }, _react2['default'].createElement(props.itemListElement, {\n      className: ('bm-item-list ' + props.itemListClassName).trim(),\n      style: getStyles('itemList')\n    }, _react2['default'].Children.map(props.children, function (item, index) {\n      if (item) {\n        var classList = ['bm-item', props.itemClassName, item.props.className].filter(function (className) {\n          return !!className;\n        }).join(' ');\n        var extraProps = _extends({\n          key: index,\n          className: classList,\n          style: getStyles('item', index, item.props.style)\n        }, !isOpen && {\n          tabIndex: -1\n        });\n        return _react2['default'].cloneElement(item, extraProps);\n      }\n    }))), props.customCrossIcon !== false && _react2['default'].createElement('div', {\n      style: getStyles('closeButton')\n    }, _react2['default'].createElement(_componentsCrossIcon2['default'], {\n      onClick: close,\n      styles: props.styles,\n      customIcon: props.customCrossIcon,\n      className: props.crossButtonClassName,\n      crossClassName: props.crossClassName,\n      isOpen: isOpen\n    }))));\n  };\n  _s3(Menu, \"xWpdmknuMuP+EvtEJQf7yqHXr3I=\", false, function () {\n    return [usePrevious];\n  });\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    className: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableAutoFocus: _propTypes2['default'].bool,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    htmlClassName: _propTypes2['default'].string,\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    itemListElement: _propTypes2['default'].oneOf(['div', 'nav']),\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    noTransition: _propTypes2['default'].bool,\n    onClose: _propTypes2['default'].func,\n    onIconHoverChange: _propTypes2['default'].func,\n    onOpen: _propTypes2['default'].func,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n  return Menu;\n};\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-burger-menu/lib/menuFactory.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/react-burger-menu/lib/menus/slide.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-burger-menu/lib/menus/slide.js ***!
  \***********************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval(__webpack_require__.ts("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\nvar _menuFactory = __webpack_require__(/*! ../menuFactory */ \"(app-pages-browser)/./node_modules/react-burger-menu/lib/menuFactory.js\");\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\nvar styles = {};\nexports[\"default\"] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yZWFjdC1idXJnZXItbWVudS9saWIvbWVudXMvc2xpZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWJBLDhDQUE2QztFQUMzQ0csS0FBSyxFQUFFO0FBQ1QsQ0FBQyxFQUFDO0FBRUYsU0FBU0Msc0JBQXNCQSxDQUFDQyxHQUFHLEVBQUU7RUFBRSxPQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsVUFBVSxHQUFHRCxHQUFHLEdBQUc7SUFBRSxTQUFTLEVBQUVBO0VBQUksQ0FBQztBQUFFO0FBRWhHLElBQUlFLFlBQVksR0FBR0MsbUJBQU8sQ0FBQywrRkFBZ0IsQ0FBQztBQUU1QyxJQUFJQyxhQUFhLEdBQUdMLHNCQUFzQixDQUFDRyxZQUFZLENBQUM7QUFFeEQsSUFBSUcsTUFBTSxHQUFHLENBQUMsQ0FBQztBQUVmUixrQkFBa0IsR0FBRyxDQUFDLENBQUMsRUFBRU8sYUFBYSxDQUFDLFNBQVMsQ0FBQyxFQUFFQyxNQUFNLENBQUM7QUFDMURDLE1BQU0sQ0FBQ1QsT0FBTyxHQUFHQSxPQUFPLENBQUMsU0FBUyxDQUFDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFh4R29vXFxwZXJzb25hbC1zaXRlXFxub2RlX21vZHVsZXNcXHJlYWN0LWJ1cmdlci1tZW51XFxsaWJcXG1lbnVzXFxzbGlkZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyAnZGVmYXVsdCc6IG9iaiB9OyB9XG5cbnZhciBfbWVudUZhY3RvcnkgPSByZXF1aXJlKCcuLi9tZW51RmFjdG9yeScpO1xuXG52YXIgX21lbnVGYWN0b3J5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21lbnVGYWN0b3J5KTtcblxudmFyIHN0eWxlcyA9IHt9O1xuXG5leHBvcnRzWydkZWZhdWx0J10gPSAoMCwgX21lbnVGYWN0b3J5MlsnZGVmYXVsdCddKShzdHlsZXMpO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJfbWVudUZhY3RvcnkiLCJyZXF1aXJlIiwiX21lbnVGYWN0b3J5MiIsInN0eWxlcyIsIm1vZHVsZSJdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/react-burger-menu/lib/menus/slide.js\n"));

/***/ })

}]);