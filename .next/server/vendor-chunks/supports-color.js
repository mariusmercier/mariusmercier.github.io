"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/supports-color";
exports.ids = ["vendor-chunks/supports-color"];
exports.modules = {

/***/ "(rsc)/./node_modules/supports-color/index.js":
/*!**********************************************!*\
  !*** ./node_modules/supports-color/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst os = __webpack_require__(/*! os */ \"os\");\nconst tty = __webpack_require__(/*! tty */ \"tty\");\nconst hasFlag = __webpack_require__(/*! has-flag */ \"(rsc)/./node_modules/has-flag/index.js\");\nconst {\n  env\n} = process;\nlet forceColor;\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false') || hasFlag('color=never')) {\n  forceColor = 0;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {\n  forceColor = 1;\n}\nif ('FORCE_COLOR' in env) {\n  if (env.FORCE_COLOR === 'true') {\n    forceColor = 1;\n  } else if (env.FORCE_COLOR === 'false') {\n    forceColor = 0;\n  } else {\n    forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n  }\n}\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n  return {\n    level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3\n  };\n}\nfunction supportsColor(haveStream, streamIsTTY) {\n  if (forceColor === 0) {\n    return 0;\n  }\n  if (hasFlag('color=16m') || hasFlag('color=full') || hasFlag('color=truecolor')) {\n    return 3;\n  }\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n  if (haveStream && !streamIsTTY && forceColor === undefined) {\n    return 0;\n  }\n  const min = forceColor || 0;\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n  if (process.platform === 'win32') {\n    // Windows 10 build 10586 is the first Windows release that supports 256 colors.\n    // Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n    const osRelease = os.release().split('.');\n    if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n    return 1;\n  }\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n    return min;\n  }\n  if ('TEAMCITY_VERSION' in env) {\n    return /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n  }\n  if (env.COLORTERM === 'truecolor') {\n    return 3;\n  }\n  if ('TERM_PROGRAM' in env) {\n    const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n  if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n  return min;\n}\nfunction getSupportLevel(stream) {\n  const level = supportsColor(stream, stream && stream.isTTY);\n  return translateLevel(level);\n}\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: translateLevel(supportsColor(true, tty.isatty(1))),\n  stderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/supports-color/index.js\n");

/***/ })

};
;